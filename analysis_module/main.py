import logging
from .data_fetching import fetch_forex_data
from .data_aggregation import aggregate_data
from .strategy_analysis import analyze_malaysian_strategy

# Configure logging
logging.basicConfig(level=logging.INFO)

def main(request):
    """
    Main function to fetch, aggregate, and analyze forex data.

    Args:
        request: The request object (or None during testing).
    
    Returns:
        signals: Trading signals generated by strategy analysis.
    """
    # Fetch data
    df_minute = fetch_forex_data(request)
    if df_minute is None:
        logging.error("Failed to fetch forex data.")
        return None

    # Aggregate data
    df_4h = aggregate_data(df_minute, "4H")
    df_15m = aggregate_data(df_minute, "15M")

    # Analyze strategy
    signals = analyze_malaysian_strategy(df_4h, df_15m)

    # Output signals
    if signals:
        logging.info("Trading Signals: %s", signals)
    else:
        logging.info("No trading signals generated.")

    return signals

# Example invocation
# Replace `request` with actual request object when integrating with Django
if __name__ == "__main__":
    main(request=None)
